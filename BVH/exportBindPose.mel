global proc writeJoint(string $joint, string $indent)
{
  global vector $frameData[];
  global int $dataCount;
  global int $fileId;
  string $parent[] = `listRelatives -parent -type joint $joint`;
  
  vector $translate;
  vector $rotate;
  if (size($parent) > 0)
  {
    $translate =`xform -q -relative -translation $joint`;
    $rotate =`xform -q -relative -rotation $joint`;
    print ($indent+"OFFSET "+ $translate + "\n");
    print ($indent+"CHANNELS 3 ");

    fprint $fileId ($indent+"OFFSET "+ $translate + "\n");
    fprint $fileId ($indent+"CHANNELS 3 ");
  }
  else
  {
    $translate =`xform -q -worldSpace -translation $joint`;
    $rotate =`xform -q -worldSpace -rotation $joint`;

    print ($indent+"OFFSET 0.0 0.0 0.0\n");
    print ($indent+"CHANNELS 6 Xposition Yposition Zposition ");  

    fprint $fileId ($indent+"OFFSET 0.0 0.0 0.0\n");
    fprint $fileId ($indent+"CHANNELS 6 Xposition Yposition Zposition ");  
    $frameData[$dataCount] = $translate;
    $dataCount =  $dataCount + 1;
  }

  string $ro = `xform -q -roo $joint`;
  if ($ro == "zyx") print ("Xrotation Yrotation Zrotation\n");
  if ($ro == "yzx") print ("Xrotation Zrotation Yrotation\n");
  if ($ro == "zxy") print ("Yrotation Xrotation Zrotation\n");
  if ($ro == "xzy") print ("Yrotation Zrotation Xrotation\n");
  if ($ro == "yxz") print ("Zrotation Xrotation Yrotation\n");
  if ($ro == "xyz") print ("Zrotation Yrotation Xrotation\n");

  if ($ro == "zyx") fprint $fileId ("Xrotation Yrotation Zrotation\n");
  if ($ro == "yzx") fprint $fileId ("Xrotation Zrotation Yrotation\n");
  if ($ro == "zxy") fprint $fileId ("Yrotation Xrotation Zrotation\n");
  if ($ro == "xzy") fprint $fileId ("Yrotation Zrotation Xrotation\n");
  if ($ro == "yxz") fprint $fileId ("Zrotation Xrotation Yrotation\n");
  if ($ro == "xyz") fprint $fileId ("Zrotation Yrotation Xrotation\n");


  if ($ro == "zyx") $frameData[$dataCount] = <<$rotate.x, $rotate.y, $rotate.z>>;
  if ($ro == "yzx") $frameData[$dataCount] = <<$rotate.x, $rotate.z, $rotate.y>>;
  if ($ro == "zxy") $frameData[$dataCount] = <<$rotate.y, $rotate.x, $rotate.z>>;
  if ($ro == "xzy") $frameData[$dataCount] = <<$rotate.y, $rotate.z, $rotate.x>>;
  if ($ro == "yxz") $frameData[$dataCount] = <<$rotate.z, $rotate.x, $rotate.y>>;
  if ($ro == "xyz") $frameData[$dataCount] = <<$rotate.z, $rotate.y, $rotate.x>>;
  
  $dataCount =  $dataCount + 1;
}

global proc exportJoint(string $root, string $indent)
{
  global int $fileId;
  print ($indent+"JOINT "+$root +"\n");
  print ($indent + "{\n");

  fprint $fileId ($indent+"JOINT "+$root +"\n");
  fprint $fileId ($indent + "{\n");

  writeJoint($root, $indent + "\t");

  string $children[] = `listRelatives -children -type joint $root`;
  for ($eachChild in $children)
  {
     exportJoint($eachChild, $indent + "\t");
  }

  print ($indent + "}\n");

  fprint $fileId ($indent + "}\n");
}

global proc exportBindPose()
{
  global int $fileId;

  string $root[] = `ls -sl -type joint`;
  if (size($root[0]) == 0)
  {
      error "ERROR: Please select the root joint\n";
  }
  
  global int $dataCount = 0;  
  print "HIERARCHY\n";
  fprint $fileId "HIERARCHY\n";
  exportJoint($root[0], "");
  print "\n";
  fprint $fileId "\n";

  print "MOTION\n";
  print "Frames: 1\n";
  print "Frame Time: 0.0\n"; 

  fprint $fileId "MOTION\n";
  fprint $fileId "Frames: 1\n";
  fprint $fileId "Frame Time: 0.033333\n"; 

  global vector $frameData[];
  for ($each in $frameData) 
  {
     print ($each + " ");
     fprint $fileId ($each + " ");
  }
}

global proc onFileDialog(string $fileName,string $fileType)
{
    global int $fileId;

    string $message=`confirmDialog 	-title "Export BVH" 
						-message "You wannt to proceed?"
						-ma "center"
						-button "Yes"
						-button "No"
						-defaultButton "Yes"
 						-cancelButton "No"
						-dismissString "No"`;
    if ($message=="Yes")
    {
        $fileId=`fopen $fileName "w"`;
        exportBindPose;
        fclose $fileId;
    }
}


global proc exportBVH()
{
  string $filenames[] = `fileDialog2 -fm 0 -okc "Save" -cap "Save BVH File" -sff "BVH" -ff "BVH (*.bvh),*.bvh;"`;

  int $len = size($filenames);
  if ($len > 0)
  {
      global int $fileId;
      string $fileName = $filenames[0];
      $fileId=`fopen $fileName "w"`;
      exportBindPose;
      fclose $fileId;
  }
}

exportBVH();
